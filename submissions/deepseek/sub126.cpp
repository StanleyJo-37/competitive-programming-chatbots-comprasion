#include <string>
using namespace std;

string thue_morse(int n) {
    // The Thue-Morse sequence can be generated by starting with "0" and iteratively
    // appending the complement of the current sequence. However, for large n, this
    // approach can be optimized by observing that the sequence can be generated using
    // the count of 1's in the binary representation of the index (parity).
    // Specifically, the i-th digit (0-based) is 0 if the number of 1's in the binary
    // representation of i is even, and 1 otherwise.
    
    string result;
    for (int i = 0; i < n; ++i) {
        // Count the number of 1's in the binary representation of i
        int count = 0;
        int num = i;
        while (num > 0) {
            count += num & 1;
            num >>= 1;
        }
        // Append '0' if even, '1' if odd
        result += (count % 2 == 0) ? '0' : '1';
    }
    return result;
}